import g from"lodash.clonedeep";import m from"./user-agents.json"assert{type:"json"};var o=m,d=t=>{let a=t.reduce((e,[n])=>e+n,0),r=0;return t.map(([e,n])=>(r+=e/a,[r,n]))},f=o.map(({weight:t},a)=>[t,a]),p=d(f),u=(t,a=r=>r)=>{let r;return typeof t=="function"?r=[t]:t instanceof RegExp?r=[e=>typeof e=="object"&&e&&"userAgent"in e&&e.userAgent?t.test(e.userAgent):t.test(e)]:t instanceof Array?r=t.map(e=>u(e)):typeof t=="object"?r=Object.entries(t).map(([e,n])=>u(n,s=>s[e])):r=[e=>typeof e=="object"&&e&&"userAgent"in e&&e.userAgent?t===e.userAgent:t===e],e=>{try{let n=a(e);return r.every(s=>s(n))}catch{return!1}}},A=t=>{if(!t)return p;let a=u(t),r=[];return o.forEach((e,n)=>{a(e)&&r.push([e.weight,n])}),d(r)},c=(t,a)=>{Object.defineProperty(t,"cumulativeWeightIndexPairs",{configurable:!0,enumerable:!1,writable:!1,value:a})},b,i=class t extends Function{constructor(r){super();this[b]=()=>this.data.userAgent;this.toString=()=>this.data.userAgent;this.random=()=>{let r=new t;return c(r,this.cumulativeWeightIndexPairs),r.randomize(),r};this.randomize=()=>{let r=Math.random(),[,e]=this.cumulativeWeightIndexPairs.find(([s])=>s>r)??[];if(e==null)throw new Error("Error finding a random user agent.");let n=o[e];this.data=g(n)};if(c(this,A(r)),this.cumulativeWeightIndexPairs.length===0)throw new Error("No user agents matched your filters.");return this.randomize(),new Proxy(this,{apply:()=>this.random(),get:(e,n,s)=>{if(e.data&&typeof n=="string"&&Object.prototype.hasOwnProperty.call(e.data,n)&&Object.prototype.propertyIsEnumerable.call(e.data,n)){let l=e.data[n];if(l!==void 0)return l}return Reflect.get(e,n,s)}})}static{b=Symbol.toPrimitive}static{this.random=r=>{try{return new t(r)}catch{return null}}}};var P=i;export{P as default};
//# sourceMappingURL=index.js.map